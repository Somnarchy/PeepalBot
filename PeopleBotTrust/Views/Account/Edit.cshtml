@model  PeopleBotTrust.Models.AccountViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Edit Account</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
       
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Account.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Account.AccountType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(m => m.Account.AccountTypeId, Model.AccountTypeList,@*"-- Select --",*@     new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Account.AccountTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Account.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Account.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Account.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Account.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(m => m.Account.CustomerId, Model.CustomerList, new { @class = "form-control" })*@
                        <select id="Account_CustomerId" name="Account.CustomerId" class="form-control">
                            <option value="">-- Select --</option>
                            @if (Model.CustomerList != null)
                            {
                                foreach (var item in Model.CustomerList)
                                {
                                    <option value="@(item.Value)" @(Model.Account.CustomerId.ToString() == item.Value ? " selected='selected' " : "")>@(item.Text)</option>
                                }
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.Account.CustomerId, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-sm btn-success" />
                        <a class="btn btn-sm btn-warning" href="/Account/">Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>